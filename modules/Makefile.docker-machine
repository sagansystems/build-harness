DOCKER_MACHINE_NAME ?= gladly
DOCKER_DOWNLOAD_URL ?= https://get.docker.com/builds/$(LOCAL_OS)/$(LOCAL_ARCH)/docker-$(DOCKER_VERSION)
DOCKER_ISO ?= https://github.com/boot2docker/boot2docker/releases/download/v$(DOCKER_VERSION)/boot2docker.iso
DOCKER_MACHINE_MEMORY ?= 4096
DOCKER_MACHINE_DISK ?= 50000

export DOCKER_MACHINE_NAME

DEPS_TARGETS += machine:deps

.PHONY : machine\:deps machine\:info machine\:recreate machine\:create machine\:destroy machine\:start machine\:stop machine\:restart machine\:deps

## Setup dependencies for docker-machine
machine\:deps:
	@[ -x $(DOCKER_CMD) ] || (curl -s -o $(DOCKER_CMD) $(DOCKER_DOWNLOAD_URL) && chmod 755 $(DOCKER_CMD))
	@(docker-machine status $(DOCKER_MACHINE_NAME) 2>&1 | grep -q "does not exist"; [ $$? -ne 0 ]) || $(SELF) machine:create
	@(docker-machine status $(DOCKER_MACHINE_NAME) 2>&1 | grep -q "^Running") || $(SELF) machine:start
	@docker-machine env $(DOCKER_MACHINE_NAME) | tr -d '"' > "$(MAKEFILE_PATH).env"
	$(eval -include $(MAKEFILE_PATH).env)
	@$(call assert,DOCKER_HOST)
	@$(call assert,DOCKER_CERT_PATH)
	@$(DOCKER_CMD) version 2>&1 >/dev/null | grep 'Error response from daemon'; [ $$? -ne 0 ]

## Docker Machine Info
machine\:info:
	@echo 'DOCKER_MACHINE_NAME=$(DOCKER_MACHINE_NAME)'
	@echo 'DOCKER_DOWNLOAD_URL=$(DOCKER_DOWNLOAD_URL)'
	@echo 'DOCKER_HOST=$(DOCKER_HOST)'
	@echo 'DOCKER_CERT_PATH=$(DOCKER_CERT_PATH)'
	@echo 'DOCKER_MACHINE_MEMORY=$(DOCKER_MACHINE_MEMORY)'
	@echo 'DOCKER_MACHINE_DISK=$(DOCKER_MACHINE_DISK)'

## Recreate the docker machine
machine\:recreate:
	@$(SELF) machine:destroy machine:create

## Create docker machine for environment
machine\:create:
	$(call assert,DOCKER_MACHINE_NAME)
	@echo "INFO: Creating '$(DOCKER_MACHINE_NAME)' docker machine"
	@docker-machine create --driver virtualbox --virtualbox-memory $(DOCKER_MACHINE_MEMORY) --virtualbox-disk-size=$(DOCKER_MACHINE_DISK) --virtualbox-boot2docker-url=$(DOCKER_ISO) $(DOCKER_MACHINE_NAME)

## Destroy docker machine for environment
machine\:destroy:
	$(call assert,DOCKER_MACHINE_NAME)
	@echo "INFO: Destroying '$(DOCKER_MACHINE_NAME)' docker machine"
	@docker-machine rm $(DOCKER_MACHINE_NAME)

## Start docker machine for environment
machine\:start:
	$(call assert,DOCKER_MACHINE_NAME)
	@echo "INFO: Starting '$(DOCKER_MACHINE_NAME)' docker machine"
	@docker-machine start $(DOCKER_MACHINE_NAME)

## Stop docker machine for environment
machine\:stop:
	$(call assert,DOCKER_MACHINE_NAME)
	@echo "INFO: Stopping '$(DOCKER_MACHINE_NAME)' docker machine"
	@docker-machine stop $(DOCKER_MACHINE_NAME)

## Restart docker machine for environment
machine\:restart:
	@$(SELF) machine:stop machine:start
